/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CompilerJDialog.java
 *
 * Created on Jul 31, 2012, 7:06:06 PM
 */
package jgenfit.settings;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.concurrent.Executor;
import java.util.logging.Level;
import java.util.logging.Logger;
import jgenfit.utils.OutputDisplayer;
import utils.GenfitPropertiesReader;
import utils.OSDetector;

/**
 *
 * @author DEMARIAA
 */
public class CompilerJDialog extends javax.swing.JDialog {

    /** Creates new form CompilerJDialog */
    public CompilerJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(jgenfit.JGenfitApp.class).getContext().getResourceMap(CompilerJDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setFont(resourceMap.getFont("jTextArea1.font")); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setName("jTextArea1"); // NOI18N
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(271, 271, 271)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
 
            ProcessBuilder pb;
            if (OSDetector.isMac() || OSDetector.isUnix()){
                //pb = new ProcessBuilder(GenfitPropertiesReader.getGenfitFolder() + "\\lxgen", "2");
                pb = new ProcessBuilder(GenfitPropertiesReader.getGenfitFolder() + "/" + GenfitPropertiesReader.getMacCompilerCommand(), "2");
                //Check if it is executable
                File file = new File(GenfitPropertiesReader.getGenfitFolder() + "/" + GenfitPropertiesReader.getMacCompilerCommand());
                if (file.exists()){
                    if (!file.canExecute()){
                        System.out.println("It seems that the file is not an executable: " + GenfitPropertiesReader.getGenfitFolder() + "/" + GenfitPropertiesReader.getMacCompilerCommand());
                    }
                }
                else{
                    System.out.println("File doesn't exit: " + GenfitPropertiesReader.getGenfitFolder() + "/" + GenfitPropertiesReader.getMacCompilerCommand());
                }
            }
            else{
                 //pb = new ProcessBuilder(GenfitPropertiesReader.getGenfitFolder() + "\\pcgen.bat", "2");
                pb = new ProcessBuilder(GenfitPropertiesReader.getGenfitFolder() + "/" + GenfitPropertiesReader.getWindowsCompilerCommand(), "2");
            }

             File folder = new File(GenfitPropertiesReader.getGenfitFolder());
             
             if (folder.exists()){               
                 pb.directory(folder);                
                 OutputDisplayer displayer = new OutputDisplayer(jTextArea1);
                 
                 displayer.commence(pb.start());
                 this.jTextArea1.setText(pb.command().toString());
                 this.jTextArea1.setText(this.jTextArea1.getText() + "\nCompiling:  it can takes several minutes.....");
                 this.jTextArea1.setText(this.jTextArea1.getText() + "\nYou can compile manually by executing: ");
                 String command = "";
                 for (String param : pb.command()) {
                     command = command + param + " ";
                 }
                  this.jTextArea1.setText(this.jTextArea1.getText() + command);
             }
             else{
                 this.jTextArea1.setText(folder.getAbsolutePath() + " doesn't exist");
             }
         
        } catch (IOException ex) {
            Logger.getLogger(CompilerJDialog.class.getName()).log(Level.SEVERE, ex.getMessage(), ex);
        }
                
}//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompilerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompilerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompilerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompilerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                CompilerJDialog dialog = new CompilerJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    /*public void compile() throws FileNotFoundException, IOException{
        String commandName = null;
        if (OSDetector.isMac() || OSDetector.isUnix()) {
            commandName = GenfitPropertiesReader.getMacCompilerCommand();
        } else {
            commandName = GenfitPropertiesReader.getWindowsCompilerCommand();
        }
        
        this.setTitle(commandName);
        
        if (commandName != null){
         
           
            String[] command = {GenfitPropertiesReader.getGenfitFolder().trim() + "/" + commandName, "2"};   
            
         // String[] command = {inputFolder.trim() + "/" + galloCommandOSName, inputCode, fourier, parameter, inputFolder, this.getFourierFile(), this.getParameterFile(), outputFolder};          
                Process process = Runtime.getRuntime().exec(command);


                String line;
                BufferedReader input = new BufferedReader(new InputStreamReader(process.getInputStream()));
                StringBuilder br = new StringBuilder();
                while ((line = input.readLine()) != null) {
                     br.append(line + "\n");
                     //this.jTextArea1.setText(br.toString());
                }
               
                input.close();
           
                
 
        }
        this.setVisible(false);
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
